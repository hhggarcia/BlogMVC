@using BlogMVC.Services
@model EntryDetailsVM

@{
    ViewData["Title"] = Model.Titulo;
    var fechaPublicacionFormat = Model.FechaPublicacion.ToString("dd MMM, yyyy");
}

<div class="d-flex justify-content-between align-items-center flex-wrap">
    <h3>@Model.Titulo</h3>
    @if(Model.MostrarBotonEdicion)
    {
        <div class="d-flex gap-2">
            <a asp-action="Editar" asp-route-id="@Model.Id" class="btn btn-primary">Editar esta entrada</a>
            <form asp-action="Borrar" style="display: inline">
                <input type="hidden" name="Id" id="id" value="@Model.Id"/>
                @if(Model.EntradaBorrada)
                {
                    <button class="btn btn-secondary" asp-action="Borrar" asp-route-borrado="false"> Restaurar</button>
                } else{
                    <button class="btn btn-danger" asp-action="Borrar" asp-route-borrado="true"> Borrar</button>

                }
            </form>
        </div>
    }        
</div>

<h6>@Model.EscritoPor | @fechaPublicacionFormat</h6>

@if(!string.IsNullOrEmpty(Model.PortadaUrl)){
    <img alt="portada" src="@Model.PortadaUrl" class="img-fluid" />                             
}

<div id="contenido"></div>

<input type="hidden" id="cuerpoDelta" name="cuerpoDelta" value="@Model.Cuerpo" />

@section Scripts{
    <script type="module">
        import { QuillDeltaToHtmlConverter } from "https://cdn.jsdelivr.net/npm/quill-delta-to-html/+esm";

        const deltaString = $("#cuerpoDelta").val();
        const delta = JSON.parse(deltaString);
        const converter = new QuillDeltaToHtmlConverter(delta);

        const contenido = document.getElementById("contenido");
        contenido.innerHTML = converter.convert();

        document.querySelectorAll('prev').foreach(el => {
            hljs.highlightElement(el);
        });

    </script>
}